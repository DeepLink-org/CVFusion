/**
 * @brief #include-style X macros
 * @author guanzhichao
 */

#ifndef TYPE_LOGICALTYPE_OP_MAP
#define TYPE_LOGICALTYPE_OP_MAP(OP, SYMBOL)
#endif

#ifndef PARROTS_OP_LOGICAL_TRANS
#define PARROTS_OP_LOGICAL_TRANS(PARROTS_OP, ELENA_OP)
#endif


PARROTS_OP_LOGICAL_TRANS(neq, NE)
PARROTS_OP_LOGICAL_TRANS(eq, EQ)
PARROTS_OP_LOGICAL_TRANS(ge, GE)
PARROTS_OP_LOGICAL_TRANS(gt, GT)
PARROTS_OP_LOGICAL_TRANS(le, LE)
PARROTS_OP_LOGICAL_TRANS(lt, LT)
PARROTS_OP_LOGICAL_TRANS(neqc, NE)
PARROTS_OP_LOGICAL_TRANS(eqc, EQ)
PARROTS_OP_LOGICAL_TRANS(gec, GE)
PARROTS_OP_LOGICAL_TRANS(gtc, GT)
PARROTS_OP_LOGICAL_TRANS(lec, LE)
PARROTS_OP_LOGICAL_TRANS(ltc, LT)
PARROTS_OP_LOGICAL_TRANS(inpNeq, NE)
PARROTS_OP_LOGICAL_TRANS(inpEq, EQ)
PARROTS_OP_LOGICAL_TRANS(inpGe, GE)
PARROTS_OP_LOGICAL_TRANS(inpGt, GT)
PARROTS_OP_LOGICAL_TRANS(inpLe, LE)
PARROTS_OP_LOGICAL_TRANS(inpLt, LT)
PARROTS_OP_LOGICAL_TRANS(inpNeqc, NE)
PARROTS_OP_LOGICAL_TRANS(inpEqc, EQ)
PARROTS_OP_LOGICAL_TRANS(inpGec, GE)
PARROTS_OP_LOGICAL_TRANS(inpGtc, GT)
PARROTS_OP_LOGICAL_TRANS(inpLec, LE)
PARROTS_OP_LOGICAL_TRANS(inpLtc, LT)


TYPE_LOGICALTYPE_OP_MAP(GE, >=)
TYPE_LOGICALTYPE_OP_MAP(GT, >)
TYPE_LOGICALTYPE_OP_MAP(LE, <=)
TYPE_LOGICALTYPE_OP_MAP(LT, <)
TYPE_LOGICALTYPE_OP_MAP(NE, !=)
TYPE_LOGICALTYPE_OP_MAP(EQ, ==)
TYPE_LOGICALTYPE_OP_MAP(AND, &&)
TYPE_LOGICALTYPE_OP_MAP(OR, ||)

#undef PARROTS_OP_LOGICAL_TRANS
#undef TYPE_LOGICALTYPE_OP_MAP
